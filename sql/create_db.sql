SET storage_engine=InnoDB;
SET FOREIGN_KEY_CHECKS=1;

DROP DATABASE IF EXISTS registrogrest;
CREATE DATABASE IF NOT EXISTS registrogrest;
USE registrogrest;

DROP TABLE IF EXISTS partecipanti;
DROP TABLE IF EXISTS staff;
DROP TABLE IF EXISTS lavoratori;
DROP TABLE IF EXISTS programma;
DROP TABLE IF EXISTS squadre;
DROP TABLE IF EXISTS utenti;
DROP TABLE IF EXISTS giorni;

CREATE TABLE utenti (
	UID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	Nome CHAR(30) NOT NULL,
	Cognome CHAR(30) NOT NULL,
	PRIMARY KEY (UID)
);

CREATE TABLE staff (
	SID INT UNSIGNED NOT NULL,
	Nickname CHAR(20) NOT NULL,
	Password CHAR(64) NOT NULL,
	PL INT UNSIGNED NOT NULL,
	PRIMARY KEY (SID, Nickname), 
	FOREIGN KEY (SID)
		REFERENCES utenti(UID) 
		ON DELETE CASCADE
		ON UPDATE CASCADE 
);

CREATE TABLE squadre (
	SID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	Nome CHAR(60) NOT NULL,
	Anno SMALLINT NOT NULL,
	PRIMARY KEY (SID)
);

-- https://www.sqlshack.com/implement-array-like-functionality-sql-server/

CREATE TABLE lavoratori (
	LID INT UNSIGNED NOT NULL,
	Squadra INT UNSIGNED NOT NULL,
	Anno SMALLINT NOT NULL,
	Occupazione TINYINT NOT NULL, -- ID di che cosa si occupa (es. 1 = Grest, 2 = Doposcuola, ecc...)
	--PRIMARY KEY (LID),
    FOREIGN KEY (LID)
		REFERENCES utenti(UID) 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (Squadra)
		REFERENCES squadre(SID) 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE partecipanti (
	PID INT UNSIGNED NOT NULL,
    Squadra INT UNSIGNED NOT NULL,
	Anno SMALLINT NOT NULL,
	Accompagnatore CHAR(60) NOT NULL,
	PRIMARY KEY (PID),
    FOREIGN KEY (PID)
		REFERENCES utenti(UID) 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
    FOREIGN KEY (Squadra)
		REFERENCES squadre(SID) 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE programma (
	Data DATE NOT NULL,
	Descrizione TEXT,
	OID INT UNSIGNED NOT NULL,
	PRIMARY KEY (Data),
	FOREIGN KEY (OID)
		REFERENCES utenti(UID) 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE giorni (
	Data DATE NOT NULL,
	GID INT UNSIGNED NOT NULL,
	Temperatura DOUBLE(2, 1),
	Assente BIT(1) NOT NULL,
	MotivoAssenza TEXT,
	PRIMARY KEY (Data), 
    FOREIGN KEY (GID)
		REFERENCES utenti(UID) 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);